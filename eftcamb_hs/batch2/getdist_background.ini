
#if zero, columnnum calculated automatically as total number of columns
columnnum  = 0

out_root = 

#If generated chain at higher temperature can cool for computing results
cool = 1

#If 0 assume 1 and no chain filename prefixes
chain_num = 8
first_chain = 
exclude_chain = 

#width of Gaussian smoothing - Should check plots are robust to changes in 
#this parameter. Narrow diagonal distributions need larger number
#Can also check plots by comparing with setting smoothing=F below
num_bins = 40

#For disgarding burn-in if using raw chains
#if < 1 interpreted as a fraction of the total number of rows (0.3 ignores first 30% of lines)
ignore_rows = 0.3

#if T produced B&W printer friendly output
B&W = F
#version of MatLab you are using
#matlab_version = 7

matlab_subplot_size_inch = 4.0
matlab_subplot_size_inch2 = 4.0
matlab_subplot_size_inch3 = 6.0

matlab_plot_output = pdf

line_labels = T

#Switches; auto_label labels all parameters by their number
no_plots = F
no_tests = F
auto_label = F
#samples_are_chains = F can be useful for other samples when first two columns not present
samples_are_chains = T


plot_meanlikes = T
shade_meanlikes = T

# if non-zero, output _thin file, thinned by thin_factor
thin_factor = 0
#Do probabilistic importance sampling to single samples
make_single_samples = F
single_thin = 4

#Do simple importance sampling
adjust_priors = F
#Map parameters to other derived quantities
map_params = F

#Use a Gaussian smoothing with width of the bin size
#Otherwise use top hat bins
smoothing = T

num_contours = 2
contour1 = 0.68
contour2 = 0.95

do_minimal_1d_intervals = F

#if we only want 2D plots agains a particular variable
plot_2D_param = 0

#if above zero, instead plot just these combinations:
#if both zero it will plot most correlated variables
plot_2D_num = 0
plot1 = omegam w
plot2 =

#number of sample plots, colored by third parameter
#if last parameter is 0 or -1 colored by the parameter most correlated
#with one of the eigenvector directions (e.g. parallel or orthogonal to degeneracy)
num_3D_plots = 0
3D_plot1 = 

#Output 2D plots for param combos with 1D marginalized plots along the diagonal
triangle_plot = T
#triangle_params = omegal omegam H0

#e.g. colormap('jet')
matlab_colscheme =

#Parameters to use. If zero use all parameters which have lables.
plotparams_num = 0
plotparams =

limits[omegam]=0 N
limits[H0]=40 100
limits[mnu]= 0 N

#all_limits sets all limitsxx for all variables to the same; can be useful for bins
all_limits = 

#compute two-tail marginalized limits irrespective of limits settings above
#(otherwise limits are two-tail only for those parameters without limits)
force_twotail = F

#PCA - analysis output in file file_root.PCA
#number of parameter to do PCA for
PCA_num = 0
PCA_normparam = omegam
#The parameters to use
PCA_params = omegam omegal
#L for log(x), M for log(-x), N for no log
PCA_func   = LLL
