#sample params for "getdist" - for processing .txt chain information
#not required if you just want to run with defaults to produce .margestats etc

#set to true if you want to produce plot.py files for various standard plots
no_tests = F

file_root = chains/HS_n_1
out_root = 
out_dir = 
plot_data_dir = ./plot_data/

#If 0 assume 1 and no chain filename prefixes; if -1 read as many as exist
chain_num = 4
first_chain = 
exclude_chain = 

#For disgarding burn-in if using raw chains. Set to zero if already removed or you have independent samples.
#if < 1 interpreted as a fraction of the total number of rows (0.3 ignores first 30% of lines)
ignore_rows = 0.3

#include defaults settings for kernel densitiy estimates etc, can also be specified in this file if you want to override
#DEFAULT(python/getdist/analysis_defaults.ini)

#samples_are_chains = F can be useful for other samples when first two columns not present
samples_are_chains = T

#if no_plots =F, produce plot script files for specific plots producing ./plot_data/ density files
no_plots = T

#if we only want 2D plots agains a particular variable
plot_2D_param = 0

#if above zero, instead plot just these combinations:
#if both zero it will plot most correlated variables
plot_2D_num = 0
plot1 = ns omegabh2
plot2 =

#number of sample plots, colored by third parameter
#if last parameter is 0 or -1 colored by the parameter most correlated
#with one of the eigenvector directions (e.g. parallel or orthogonal to degeneracy)
num_3D_plots = 1
3D_plot1 = H0 omegam tau

#Output 2D plots for param combos with 1D marginalized plots along the diagonal
triangle_plot = T
triangle_params = omegabh2 omegach2 tau omegak mnu nnu yhe Alens ns nrun logA r H0 omegam omegal sigma8 r02 eft_fm_hs_fro eft_fm_hs_n

#Parameters to use. If not specified use all parameters which have lables.
#plot_params = omegabh2 omegach2 tau ns

#Get set label to empty to not include a parameter in the parameter_names file
#lab[asz]=

#marker[x] adds vertical line to MatLab 1D plot
marker[nrun] = 0

# if non-zero, output _thin file, thinned by thin_factor
thin_factor = 0
#Do probabilistic importance sampling to single samples
make_single_samples = F
single_thin = 4

#Need to give limits if prior cuts off distribution where not very small
limits[r02]= 0 N
limits[r10]= 0 N

#all_limits sets all limitsxx for all variables to the same; can be useful for bins
all_limits = 

#compute two-tail marginalized limits irrespective of limits settings above
#(otherwise limits are two-tail only for those parameters without limits)
force_twotail = F

#PCA - analysis output in file file_root.PCA
#number of parameter to do PCA for
PCA_num = 0
PCA_normparam = omegam
#The parameters to use
PCA_params = omegam H0 tau
#L for log(x), M for log(-x), N for no log
PCA_func   = LLL

#If generated chain at higher temperature can cool for computing results
cool = 1
